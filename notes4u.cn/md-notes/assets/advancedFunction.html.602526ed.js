import{_ as p,r as t,o as e,c as o,a as n,b as c,d as a,e as l}from"./app.aabcb1ea.js";const i="/md-notes/assets/yarn.ac2e107a.png",u="/md-notes/assets/image-20221020110105880.736bce5c.png",r={},k=l('<h3 id="\u51FD\u6570\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7EC4\u5408" aria-hidden="true">#</a> \u51FD\u6570\u7EC4\u5408</h3><hr><ul><li><p>\u7EAF\u51FD\u6570\u548C\u67EF\u91CC\u5316\u5F88\u5BB9\u6613\u5199\u51FA\u6D0B\u8471\u4EE3\u7801 h(g(f(x)))</p><ul><li>\u83B7\u53D6\u6570\u7EC4\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u518D\u8F6C\u6362\u6210\u5927\u5199\u5B57\u6BCD\uFF0C <em>.toUpper(</em>.first(_.reverse(array)))</li></ul></li><li><p>\u51FD\u6570\u7EC4\u5408\u53EF\u4EE5\u8BA9\u6211\u4EEC\u628A\u7EC6\u7C92\u5EA6\u7684\u51FD\u6570\u91CD\u65B0\u7EC4\u5408\u751F\u6210\u4E00\u4E2A\u65B0\u7684\u51FD\u6570</p></li></ul><h4 id="\u7BA1\u9053" tabindex="-1"><a class="header-anchor" href="#\u7BA1\u9053" aria-hidden="true">#</a> \u7BA1\u9053</h4><p>\u4E0B\u9762\u8FD9\u5F20\u56FE\u8868\u793A\u7A0B\u5E8F\u4E2D\u4F7F\u7528\u51FD\u6570\u5904\u7406\u6570\u636E\u7684\u8FC7\u7A0B\uFF0C\u7ED9 fn \u51FD\u6570\u8F93\u5165\u53C2\u6570 a\uFF0C\u8FD4\u56DE\u7ED3\u679C b\u3002\u53EF\u4EE5\u60F3\u60F3 a \u6570\u636E</p><p>\u901A\u8FC7\u4E00\u4E2A\u7BA1\u9053\u5F97\u5230\u4E86 b \u6570\u636E\u3002</p><p><img src="'+i+'" alt="\u7BA1\u9053"></p><p>\u5F53 fn \u51FD\u6570\u6BD4\u8F83\u590D\u6742\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u53EF\u4EE5\u628A\u51FD\u6570 fn \u62C6\u5206\u6210\u591A\u4E2A\u5C0F\u51FD\u6570\uFF0C\u6B64\u65F6\u591A\u4E86\u4E2D\u95F4\u8FD0\u7B97\u8FC7\u7A0B\u4EA7\u751F\u7684 m \u548C</p><p>n\u3002</p><p>\u4E0B\u9762\u8FD9\u5F20\u56FE\u4E2D\u53EF\u4EE5\u60F3\u8C61\u6210\u628A fn \u8FD9\u4E2A\u7BA1\u9053\u62C6\u5206\u6210\u4E863\u4E2A\u7BA1\u9053 f1, f2, f3\uFF0C\u6570\u636E a \u901A\u8FC7\u7BA1\u9053 f3 \u5F97\u5230\u7ED3\u679C m\uFF0Cm</p><p>\u518D\u901A\u8FC7\u7BA1\u9053 f2 \u5F97\u5230\u7ED3\u679C n\uFF0Cn \u901A\u8FC7\u7BA1\u9053 f1 \u5F97\u5230\u6700\u7EC8\u7ED3\u679C b</p><p><img src="'+u+`" alt="\u7BA1\u9053"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fn <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">,</span> f3<span class="token punctuation">)</span> 
b <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u51FD\u6570\u7EC4\u5408-1" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7EC4\u5408-1" aria-hidden="true">#</a> <strong>\u51FD\u6570\u7EC4\u5408</strong></h4><ul><li><p>\u51FD\u6570\u7EC4\u5408 (compose)\uFF1A\u5982\u679C\u4E00\u4E2A\u51FD\u6570\u8981\u7ECF\u8FC7\u591A\u4E2A\u51FD\u6570\u5904\u7406\u624D\u80FD\u5F97\u5230\u6700\u7EC8\u503C\uFF0C\u8FD9\u4E2A\u65F6\u5019\u53EF\u4EE5\u628A\u4E2D\u95F4</p><p>\u8FC7\u7A0B\u7684\u51FD\u6570\u5408\u5E76\u6210\u4E00\u4E2A\u51FD\u6570</p><ul><li>\u51FD\u6570\u5C31\u50CF\u662F\u6570\u636E\u7684\u7BA1\u9053\uFF0C\u51FD\u6570\u7EC4\u5408\u5C31\u662F\u628A\u8FD9\u4E9B\u7BA1\u9053\u8FDE\u63A5\u8D77\u6765\uFF0C\u8BA9\u6570\u636E\u7A7F\u8FC7\u591A\u4E2A\u7BA1\u9053\u5F62\u6210\u6700\u7EC8\u7ED3\u679C</li><li><strong>\u51FD\u6570\u7EC4\u5408\u9ED8\u8BA4\u662F\u4ECE\u53F3\u5230\u5DE6\u6267\u884C</strong></li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7EC4\u5408\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">compose</span> <span class="token punctuation">(</span><span class="token parameter">f<span class="token punctuation">,</span> g</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token function">g</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> 
  <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">first</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
  <span class="token keyword">return</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> 
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">reverse</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">}</span>
<span class="token comment">// \u4ECE\u53F3\u5230\u5DE6\u8FD0\u884C </span>
<span class="token keyword">let</span> last <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> reverse<span class="token punctuation">)</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>lodash \u4E2D\u7684\u7EC4\u5408\u51FD\u6570</li><li>lodash \u4E2D\u7EC4\u5408\u51FD\u6570 flow() \u6216\u8005 flowRight()\uFF0C\u4ED6\u4EEC\u90FD\u53EF\u4EE5\u7EC4\u5408\u591A\u4E2A\u51FD\u6570</li><li>flow() \u662F\u4ECE\u5DE6\u5230\u53F3\u8FD0\u884C</li><li><strong>flflowRight()</strong> \u662F\u4ECE\u53F3\u5230\u5DE6\u8FD0\u884C\uFF0C\u4F7F\u7528\u7684\u66F4\u591A\u4E00\u4E9B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> _ <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;lodash&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">toUpper</span> <span class="token operator">=</span> <span class="token parameter">s</span> <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">reverse</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">first</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> f <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">flowRight</span><span class="token punctuation">(</span>toUpper<span class="token punctuation">,</span> first<span class="token punctuation">,</span> reverse<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6A21\u62DF\u5B9E\u73B0 lodash \u7684 flowRight \u65B9\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u591A\u51FD\u6570\u7EC4\u5408</span>
<span class="token keyword">function</span> <span class="token function">compose</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>fns</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> fns<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> 
  <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>

<span class="token comment">// ES6</span>
<span class="token keyword">const</span> <span class="token function-variable function">compose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>fns</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> fns<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u51FD\u6570\u7684\u7EC4\u5408\u8981\u6EE1\u8DB3<strong>\u7ED3\u5408\u5F8B</strong> (associativity)\uFF1A <ul><li>\u6211\u4EEC\u65E2\u53EF\u4EE5\u628A g \u548C h \u7EC4\u5408\uFF0C\u8FD8\u53EF\u4EE5\u628A f \u548C g \u7EC4\u5408\uFF0C\u7ED3\u679C\u90FD\u662F\u4E00\u6837\u7684</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7ED3\u5408\u5F8B\uFF08associativity\uFF09</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> g<span class="token punctuation">,</span> h<span class="token punctuation">)</span> 
<span class="token keyword">let</span> associative <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token function">compose</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">,</span> h<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">compose</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token function">compose</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functor-\u51FD\u5B50" tabindex="-1"><a class="header-anchor" href="#functor-\u51FD\u5B50" aria-hidden="true">#</a> Functor (\u51FD\u5B50)</h3><h4 id="\u4E3A\u4EC0\u4E48\u8981\u5B66\u51FD\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u8981\u5B66\u51FD\u5B50" aria-hidden="true">#</a> <strong>\u4E3A\u4EC0\u4E48\u8981\u5B66\u51FD\u5B50</strong></h4><p>\u5230\u76EE\u524D\u4E3A\u6B62\u5DF2\u7ECF\u5DF2\u7ECF\u5B66\u4E60\u4E86\u51FD\u6570\u5F0F\u7F16\u7A0B\u7684\u4E00\u4E9B\u57FA\u7840\uFF0C\u4F46\u662F\u6211\u4EEC\u8FD8\u6CA1\u6709\u6F14\u793A\u5728\u51FD\u6570\u5F0F\u7F16\u7A0B\u4E2D\u5982\u4F55\u628A\u526F\u4F5C\u7528</p><p>\u63A7\u5236\u5728\u53EF\u63A7\u7684\u8303\u56F4\u5185\u3001\u5F02\u5E38\u5904\u7406\u3001\u5F02\u6B65\u64CD\u4F5C\u7B49\u3002</p><h4 id="\u4EC0\u4E48\u662F-functor" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F-functor" aria-hidden="true">#</a> <strong>\u4EC0\u4E48\u662F</strong> <strong>Functor</strong></h4><ul><li><p>\u5BB9\u5668\uFF1A\u5305\u542B\u503C\u548C\u503C\u7684\u53D8\u5F62\u5173\u7CFB(\u8FD9\u4E2A\u53D8\u5F62\u5173\u7CFB\u5C31\u662F\u51FD\u6570)</p></li><li><p>\u51FD\u5B50\uFF1A\u662F\u4E00\u4E2A\u7279\u6B8A\u7684\u5BB9\u5668\uFF0C\u901A\u8FC7\u4E00\u4E2A\u666E\u901A\u7684\u5BF9\u8C61\u6765\u5B9E\u73B0\uFF0C\u8BE5\u5BF9\u8C61\u5177\u6709 map \u65B9\u6CD5\uFF0Cmap \u65B9\u6CD5\u53EF\u4EE5\u8FD0</p><p>\u884C\u4E00\u4E2A\u51FD\u6570\u5BF9\u503C\u8FDB\u884C\u5904\u7406(\u53D8\u5F62\u5173\u7CFB)</p></li></ul><h4 id="functor-\u51FD\u5B50-1" tabindex="-1"><a class="header-anchor" href="#functor-\u51FD\u5B50-1" aria-hidden="true">#</a> <strong>Functor</strong> <strong>\u51FD\u5B50</strong></h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E00\u4E2A\u5BB9\u5668\uFF0C\u5305\u88F9\u4E00\u4E2A\u503C</span>
<span class="token keyword">class</span> <span class="token class-name">Container</span> <span class="token punctuation">{</span>
  <span class="token comment">// of \u9759\u6001\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u7701\u7565 new \u5173\u952E\u5B57\u521B\u5EFA\u5BF9\u8C61</span>
  <span class="token keyword">static</span> <span class="token keyword">of</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> 
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> value <span class="token punctuation">}</span>
  <span class="token comment">// map \u65B9\u6CD5\uFF0C\u4F20\u5165\u53D8\u5F62\u5173\u7CFB\uFF0C\u5C06\u5BB9\u5668\u91CC\u7684\u6BCF\u4E00\u4E2A\u503C\u6620\u5C04\u5230\u53E6\u4E00\u4E2A\u5BB9\u5668 </span>
  <span class="token function">map</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">return</span> Container<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5 </span>
Container<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> 
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> 
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span>
<span class="token comment">// Container {_value: 25}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u603B\u7ED3</p><ul><li><p>\u51FD\u6570\u5F0F\u7F16\u7A0B\u7684\u8FD0\u7B97\u4E0D\u76F4\u63A5\u64CD\u4F5C\u503C\uFF0C\u800C\u662F\u7531\u51FD\u5B50\u5B8C\u6210</p></li><li><p>\u51FD\u5B50\u5C31\u662F\u4E00\u4E2A\u5B9E\u73B0\u4E86 map \u5951\u7EA6\u7684\u5BF9\u8C61</p></li><li><p>\u6211\u4EEC\u53EF\u4EE5\u628A\u51FD\u5B50\u60F3\u8C61\u6210\u4E00\u4E2A\u76D2\u5B50\uFF0C\u8FD9\u4E2A\u76D2\u5B50\u91CC\u5C01\u88C5\u4E86\u4E00\u4E2A\u503C</p></li><li><p>\u60F3\u8981\u5904\u7406\u76D2\u5B50\u4E2D\u7684\u503C\uFF0C\u6211\u4EEC\u9700\u8981\u7ED9\u76D2\u5B50\u7684 map \u65B9\u6CD5\u4F20\u9012\u4E00\u4E2A\u5904\u7406\u503C\u7684\u51FD\u6570\uFF08\u7EAF\u51FD\u6570\uFF09\uFF0C\u7531\u8FD9</p><p>\u4E2A\u51FD\u6570\u6765\u5BF9\u503C\u8FDB\u884C\u5904\u7406</p></li><li><p>\u6700\u7EC8 map \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u65B0\u503C\u7684\u76D2\u5B50\uFF08\u51FD\u5B50\uFF09</p></li></ul></li><li><p>\u5728 Functor \u4E2D\u5982\u679C\u6211\u4EEC\u4F20\u5165 null \u6216 undefifined</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u503C\u5982\u679C\u4E0D\u5C0F\u5FC3\u4F20\u5165\u4E86\u7A7A\u503C(\u526F\u4F5C\u7528)</span>
Container<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> 
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// TypeError: Cannot read property &#39;toUpperCase&#39; of null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="maybe-\u51FD\u5B50" tabindex="-1"><a class="header-anchor" href="#maybe-\u51FD\u5B50" aria-hidden="true">#</a> <strong>MayBe</strong> <strong>\u51FD\u5B50</strong></h4><ul><li>\u6211\u4EEC\u5728\u7F16\u7A0B\u7684\u8FC7\u7A0B\u4E2D\u53EF\u80FD\u4F1A\u9047\u5230\u5F88\u591A\u9519\u8BEF\uFF0C\u9700\u8981\u5BF9\u8FD9\u4E9B\u9519\u8BEF\u505A\u76F8\u5E94\u7684\u5904\u7406</li><li>MayBe \u51FD\u5B50\u7684\u4F5C\u7528\u5C31\u662F\u53EF\u4EE5\u5BF9\u5916\u90E8\u7684\u7A7A\u503C\u60C5\u51B5\u505A\u5904\u7406\uFF08\u63A7\u5236\u526F\u4F5C\u7528\u5728\u5141\u8BB8\u7684\u8303\u56F4\uFF09</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MayBe</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">of</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MayBe</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> 
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u5BF9\u7A7A\u503C\u53D8\u5F62\u7684\u8BDD\u76F4\u63A5\u8FD4\u56DE \u503C\u4E3A null \u7684\u51FD\u5B50</span>
  <span class="token function">map</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNothing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> MayBe<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">:</span> MayBe<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">)</span><span class="token punctuation">)</span> 
  <span class="token punctuation">}</span>
  <span class="token function">isNothing</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">===</span> <span class="token keyword">undefined</span> 
  <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
<span class="token comment">// \u4F20\u5165\u5177\u4F53\u503C </span>
MayBe<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span> 
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token comment">// \u4F20\u5165 null \u7684\u60C5\u51B5 </span>
MayBe<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> 
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token comment">// =&gt; MayBe { _value: null }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5728 MayBe \u51FD\u5B50\u4E2D\uFF0C\u6211\u4EEC\u5F88\u96BE\u786E\u8BA4\u662F\u54EA\u4E00\u6B65\u4EA7\u751F\u7684\u7A7A\u503C\u95EE\u9898\uFF0C\u5982\u4E0B\u4F8B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>MayBe<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span> 
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token keyword">null</span><span class="token punctuation">)</span> 
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token comment">// =&gt; MayBe { _value: null }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="either-\u51FD\u5B50" tabindex="-1"><a class="header-anchor" href="#either-\u51FD\u5B50" aria-hidden="true">#</a> <strong>Either</strong> <strong>\u51FD\u5B50</strong></h4><ul><li>Either \u4E24\u8005\u4E2D\u7684\u4EFB\u4F55\u4E00\u4E2A\uFF0C\u7C7B\u4F3C\u4E8E if...else...\u7684\u5904\u7406</li><li>\u5F02\u5E38\u4F1A\u8BA9\u51FD\u6570\u53D8\u7684\u4E0D\u7EAF\uFF0CEither \u51FD\u5B50\u53EF\u4EE5\u7528\u6765\u505A\u5F02\u5E38\u5904\u7406</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Left</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">of</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Left</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> 
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
  <span class="token function">map</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span> 
  <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Right</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">of</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Right</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> 
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
  <span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Right<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Either \u7528\u6765\u5904\u7406\u5F02\u5E38</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">parseJSON</span><span class="token punctuation">(</span><span class="token parameter">json</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Right<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Left<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> e<span class="token punctuation">.</span>message<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
  <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
<span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token function">parseJSON</span><span class="token punctuation">(</span><span class="token string">&#39;{ &quot;name&quot;: &quot;zs&quot; }&#39;</span><span class="token punctuation">)</span> 
					<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="io-\u51FD\u5B50" tabindex="-1"><a class="header-anchor" href="#io-\u51FD\u5B50" aria-hidden="true">#</a> <strong>IO</strong> <strong>\u51FD\u5B50</strong></h4><ul><li><p>IO \u51FD\u5B50\u4E2D\u7684 _value \u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u8FD9\u91CC\u662F\u628A\u51FD\u6570\u4F5C\u4E3A\u503C\u6765\u5904\u7406</p></li><li><p>IO \u51FD\u5B50\u53EF\u4EE5\u628A\u4E0D\u7EAF\u7684\u52A8\u4F5C\u5B58\u50A8\u5230 _value \u4E2D\uFF0C\u5EF6\u8FDF\u6267\u884C\u8FD9\u4E2A\u4E0D\u7EAF\u7684\u64CD\u4F5C(\u60F0\u6027\u6267\u884C)\uFF0C\u5305\u88C5\u5F53\u524D\u7684\u64CD</p></li></ul><p>\u4F5C\u7EAF</p><ul><li>\u628A\u4E0D\u7EAF\u7684\u64CD\u4F5C\u4EA4\u7ED9\u8C03\u7528\u8005\u6765\u5904\u7406</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;lodash/fp&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">IO</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">of</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">IO</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
      <span class="token keyword">return</span> x 
    <span class="token punctuation">}</span><span class="token punctuation">)</span> 
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> fn 
  <span class="token punctuation">}</span>
  <span class="token function">map</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token comment">// \u628A\u5F53\u524D\u7684 value \u548C \u4F20\u5165\u7684 fn \u7EC4\u5408\u6210\u4E00\u4E2A\u65B0\u7684\u51FD\u6570 </span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">IO</span><span class="token punctuation">(</span>fp<span class="token punctuation">.</span><span class="token function">flowRight</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">)</span><span class="token punctuation">)</span> 
  <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
<span class="token keyword">let</span> io <span class="token operator">=</span> <span class="token constant">IO</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>process<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>execPath<span class="token punctuation">)</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>io<span class="token punctuation">.</span><span class="token function">_value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47),d={href:"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html",target:"_blank",rel:"noopener noreferrer"},m=n("strong",null,"Functors, Applicatives, And Monads In Pictures",-1);function f(b,g){const s=t("ExternalLinkIcon");return e(),o("div",null,[k,n("p",null,[n("a",d,[c("\u51FD\u6570\u5F0F\u7F16\u7A0B\u6307\u5317"),a(s)])]),n("p",null,[n("a",v,[m,a(s)])])])}const y=p(r,[["render",f],["__file","advancedFunction.html.vue"]]);export{y as default};
